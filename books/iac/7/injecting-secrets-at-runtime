Injecting Secrets at Runtime When you can’t avoid using a secret for a stack or other infrastructure code, you can explore ways to inject the secret at runtime. You’ll normally implement it as a stack parameter, which is the topic of Chapter 7. I describe the details of handling secrets as parameters with each of the patterns and antipatterns in that chapter.
There are two different runtime situations to consider: local development and unattended agents. People who work on infrastructure code will often keep secrets in a local file that isn’t stored in version control.3 The stack tool could read that file directly, which is especially appropriate if you’re using the stack configuration file pattern (see “Pattern: Stack Configuration Files”). Or the file could be a script that sets the secrets in environment variables, which works well with the stack environment variables pattern (see “Pattern: Stack Environment Variables”). These approaches also work on unattended agents, such as those used for CI testing or CD delivery pipelines.4 But you need to store the secrets on the server or container that runs the agent. Alternatively, you can use secrets management features of your agent software to provide secrets to the stack command, as with the pipeline stack parameters pattern (see “Pattern: Pipeline Stack Parameters”). Another option is to pull secrets from a secrets management service (of the type described in “Storage Resources”), which aligns to the stack parameter registry pattern (see “Pattern: Stack Parameter Registry”).
ランタイム時にシークレットを注入する 
スタックや他のインフラストラクチャコードでシークレットを使用することを避けられない場合、ランタイムでシークレットを注入する方法を探ることができます。通常、スタックパラメータとして実装しますが、これについては第7章で詳しく説明します。この章では、各パターンやアンチパターンでパラメータとしてシークレットを扱う詳細を説明します。

考慮する必要があるランタイムの状況は2つあります。1つはローカル開発で、もう1つは無人エージェントです。インフラストラクチャコードを担当する人々は、シークレットをバージョン管理されていないローカルファイルに保存することがよくあります。スタックツールはそのファイルを直接読み取ることができます。特に、スタック構成ファイルのパターン（「パターン：スタック構成ファイル」を参照）を使用している場合には適しています。また、ファイルは環境変数にシークレットを設定するスクリプトにすることもできます。これはスタック環境変数のパターン（「パターン：スタック環境変数」を参照）ともうまく動作します。これらのアプローチは、CIテストやCDデリバリーパイプラインに使用されるような無人エージェントでも機能します。ただし、シークレットをエージェントを実行するサーバーまたはコンテナに保存する必要があります。または、エージェントソフトウェアのシークレット管理機能を使用して、スタックコマンドにシークレットを提供することもできます（「パターン：パイプラインスタックパラメータ」を参照）。別のオプションは、シークレット管理サービスからシークレットを取得することです（「ストレージリソース」で説明されているタイプのもの）。これはスタックパラメータレジストリのパターン（「パターン：スタックパラメータレジストリ」）に合致します。