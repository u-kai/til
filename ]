# エラー表現について

# 例外

## メリット

- 例外が発生したところよりも親の関数であれば誰でも例外をキャッチすることができ，main や Web フレームワークなどの最上位概念にキャッチしてもらうように設計すれば，他の関数などはエラーが発生しないものとみなして関数を利用できる
- 例外が発生しうる処理を try 句でまとめて記述することができる

## デメリット

- 例外の有無は関数やメソッドのシグネチャからは確認することができず，シグネチャが嘘をつくことになる
- 上記理由から catch を行い忘れる可能性がある
- try,catch で処理行うためネストが少し深くなる
- 関数が成功した時に返す型と失敗した時にキャッチする型が異なるためそれぞれの値を同じように操作できない
